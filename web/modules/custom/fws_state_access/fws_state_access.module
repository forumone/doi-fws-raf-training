<?php

/**
 * @file
 * Contains fws_state_access.module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\user\Entity\User;
use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_entity_access().
 */
function fws_state_access_entity_access(EntityInterface $entity, $operation, AccountInterface $account) {
  // Check if user has the state access permission.
  if (!$account->hasPermission('administer state based access')) {
    return AccessResult::neutral();
  }

  // Get the user's state code.
  $user = User::load($account->id());
  if (!$user->hasField('field_state_cd') || $user->get('field_state_cd')->isEmpty()) {
    return AccessResult::neutral();
  }
  $user_state = $user->get('field_state_cd')->value;

  // Handle user entity access.
  if ($entity->getEntityTypeId() === 'user') {
    if ($entity->hasField('field_state_cd') && !$entity->get('field_state_cd')->isEmpty()) {
      $entity_state = $entity->get('field_state_cd')->value;
      return ($user_state === $entity_state)
        ? AccessResult::allowed()
        : AccessResult::forbidden();
    }
  }

  // Handle species_image and permit_3186a entity access.
  if (in_array($entity->getEntityTypeId(), ['species_image', 'permit_3186a'])) {
    if ($entity->hasField('field_owner_state') && !$entity->get('field_owner_state')->isEmpty()) {
      $term_id = $entity->get('field_owner_state')->target_id;
      if ($term_id) {
        $term = Term::load($term_id);
        if ($term) {
          $entity_state = $term->get('field_state_code')->value;
          return ($user_state === $entity_state)
            ? AccessResult::allowed()
            : AccessResult::forbidden();
        }
      }
    }
  }

  return AccessResult::neutral();
}

/**
 * Implements hook_entity_create_access().
 */
function fws_state_access_entity_create_access(AccountInterface $account, array $context, $entity_bundle) {
  // Only apply restrictions to users with state access permission.
  if (!$account->hasPermission('administer state based access')) {
    return AccessResult::neutral();
  }

  // Allow creation of supported entity types.
  if (in_array($context['entity_type_id'], ['user', 'species_image', 'permit_3186a'])) {
    return AccessResult::allowed();
  }

  return AccessResult::neutral();
}

/**
 * Implements hook_entity_reference_selection_alter().
 */
function fws_state_access_entity_reference_selection_alter(array &$selection_settings, &$context) {
  if ($context['field_definition']->getName() === 'field_owner_state') {
    // Ensure we have a proper target bundle set.
    $selection_settings['target_bundles'] = ['state'];

    // Add sort settings.
    $selection_settings['sort'] = [
      'field' => 'field_state_code',
      'direction' => 'ASC',
    ];
  }
}

/**
 * Implements hook_form_alter().
 */
function fws_state_access_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Check if this is a node form with our field.
  if (isset($form['field_owner_state'])) {
    // Ensure the field uses the proper widget settings.
    if (isset($form['field_owner_state']['widget'])) {
      $form['field_owner_state']['widget']['#selection_settings']['sort'] = [
        'field' => 'field_state_code',
        'direction' => 'ASC',
      ];
    }
  }
}
