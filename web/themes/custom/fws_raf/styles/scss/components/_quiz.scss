@use 'utils/colors' as *;
@use 'utils/breakpoints' as *;

// Add keyframes for the aerial view animation
@keyframes aerialView {
  0% {
    transform: scale(1.1) translate(-3.5%, 0);
  }
  25% {
    transform: scale(1.1) translate(-1.75%, 0.25%);
  }
  50% {
    transform: scale(1.1) translate(0%, -0.25%);
  }
  75% {
    transform: scale(1.1) translate(1.75%, 0.25%);
  }
  100% {
    transform: scale(1.1) translate(3.5%, 0);
  }
}

.quiz {

  &__parameters {
    margin: 0 0 20px;
    padding: 0 0 20px;
    border-bottom: 1px solid #eeeeee;
    display: flex;
    flex-direction: column;
    width: 100%;

    @include breakpoint(md) {
      flex-direction: row;
      align-items: flex-end;
      justify-content: space-between;
    }
  }

  &__info {

    h2 {
      margin-top: 0;
    }

    .quiz__parameter {
      padding: 0;
      margin: 0;
    }
  }

  &__utils {
    display: flex;
    align-items: center;
    align-self: flex-end;
    padding: 10px 0 0;

    @include breakpoint(md) {
      padding: 0;
    }
  }

  &__tracker {
    font-size: 20px;
    font-weight: bold;
    padding-right: 20px;
  }

  &__timer {
    display: flex;
    justify-content: center;
  }

  &__container {
    position: relative;
  }

  // Hiding quiz content for the intial state
  &__item:not(:first-child),
  &__response,
  &__feedback,
  &__answer,
  &__complete {
    display: none;
  }

  &__prompt {
    position: relative;
  }

  &__media {
    overflow: hidden; // Ensure the animation doesn't create scrollbars
    position: relative; // Ensure proper positioning for the image and overlay

    &:before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: url('/modules/custom/fws_counting/images/Plane_Overlay.png') no-repeat center center;
      background-size: cover;
      z-index: 100;
    }

    img {
      width: 100%;
      animation: aerialView 15s linear 1 forwards; // Default settings, will be overridden by JS
      transform-origin: center center; // Ensure scaling happens from the center
      will-change: transform; // Optimize for animation performance
      transition: transform 0.5s linear; // Smooth transition for any transform changes
      aspect-ratio: 16 / 10;
      object-fit: cover;
      z-index: 50;
    }
  }

  &__guess {

    .form-text {
      max-width: 320px;
    }

    .form-type-radios {
      padding: 0 0 20px;
    }

    legend {
      border: 0;
    }
  }

  &__answer {

    i {
      margin-right: 4px;
    }
  }

  &__help {
    padding: 20px 0 0;
  }

  &__results {
    padding: 0 0 20px;
  }

  &__answer .quiz__result {
    padding: 0;
    margin: 0;
  }

  &__actions a.btn {
    margin-bottom: 15px;
    width: 100%;
    @include breakpoint(md) {
      width: auto;
    }
  }
}


.fws-quiz {

  .timer-circle {
    position: relative;
    width: 52px;
    height: 52px;
  }

  .timer-number {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 20px;
    font-weight: bold;
  }

  .timer-svg {
    width: 52px;
    height: 52px;
    transform: rotate(-90deg);
  }

  .timer-svg circle {
    fill: none;
    stroke-width: 3;
  }

  .timer-svg circle:first-child {
    stroke: #E7E7E7;
  }

  .timer-svg circle:last-child {
    stroke: $blue-medium;
    stroke-dasharray: 151px;
    // transition: stroke-dashoffset 1s linear;
  }
  .video-container {
    position: relative;
  }

  // Manual play button that appears when autoplay is blocked
  .manual-play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
    padding: 10px 20px;
    font-size: 1rem;
    cursor: pointer;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    border: none;
    border-radius: 4px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    &:hover {
      background-color: rgba(0, 0, 0, 0.9);
    }
  }
}
