<?php

/**
 * @file
 * Functions to support theming in the fws raf theme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_node().
 */
function fws_raf_preprocess_node(&$variables) {
  $node = $variables['node'];

  // Check if the node type is 'species' and it's a full page view.
  if ($node->getType() === 'species' && $variables['view_mode'] === 'full') {
    // Get the tracking search manager service.
    $tracking_manager = \Drupal::service('tracking_reports.search_manager');

    // Get the primary species ID.
    $primary_species_id = $tracking_manager->getPrimarySpeciesId($node->id());

    // Add it to the variables array.
    $variables['primary_species_id'] = $primary_species_id;
  }
}

/**
 * Implements hook_preprocess_html().
 */
function fws_raf_preprocess_html(&$variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();

  // Add class for node add page.
  if ($route_name === 'node.add') {
    $node_type = \Drupal::routeMatch()->getParameter('node_type');
    $variables['attributes']['class'][] = 'page-node-add';
    $variables['attributes']['class'][] = 'page-node-add-' . $node_type->id();
  }

  // Add class for node edit page.
  if ($route_name === 'entity.node.edit_form') {
    $node = \Drupal::routeMatch()->getParameter('node');
    $variables['attributes']['class'][] = 'page-node-edit';
    $variables['attributes']['class'][] = 'page-node-edit-' . $node->bundle();
  }

  // Only replace 'Species' with 'Manatee' for 'Manatee' site.
  if (\Drupal::service('settings')->get('replace_species_with_manatee') === TRUE && !empty($variables['head_title']['title'])) {
    // Array of word variations to replace.
    $replacements = [
      'Species' => 'Manatee',
      'species' => 'manatee',
      'SPECIES' => 'MANATEE',
    ];

    // Replace in the head title.
    $variables['head_title']['title'] = str_replace(
      array_keys($replacements),
      array_values($replacements),
      $variables['head_title']['title']
    );
  }
}

/**
 * Implements hook_preprocess_form_alter().
 */
function fws_raf_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // For all node forms.
  if (strpos($form_id, 'node_') === 0 && strpos($form_id, '_form') !== FALSE) {
    // Add consent message for sighting forms.
    if (strpos($form_id, 'node_sighting_') === 0) {
      $form['location_consent'] = [
        '#type' => 'markup',
        '#markup' => '<div class="alert alert-info location-consent-message"><p>Do you consent to sharing your location with fws.gov? USFWS will not permanently store this information, however it will be shared with our mapping provider (Google) in order to provide you with the best mapping experience. Acceptance is optional; if you do not accept, you will have to manually find the location of interest.</p></div>',
        '#weight' => -100,
      ];
    }

    // Only replace 'Manatee Number' and 'Manatee Animal ID' for 'default' site.
    if (\Drupal::service('settings')->get('replace_species_with_manatee') === TRUE && isset($form['field_species_ref'])) {
      $form['field_species_ref']['widget'][0]['target_id']['#title'] = 'Manatee Number';
    }

    if (\Drupal::service('settings')->get('replace_species_with_manatee') === TRUE && isset($form['field_species_id'])) {
      $form['field_species_id']['widget'][0]['target_id']['#title'] = 'Manatee Animal ID';
    }
  }
}

/**
 * Implements hook_preprocess_page_title().
 *
 * Replaces the word 'Species' with 'Manatee' in page titles.
 */
function fws_raf_preprocess_page_title(&$variables) {
  if (!empty($variables['title'])) {
    // Convert title to string if it's a TranslatableMarkup object.
    $title = (string) $variables['title'];

    // Only replace 'Species' with 'Manatee' for 'Manatee' site.
    if (\Drupal::service('settings')->get('replace_species_with_manatee') === TRUE && strstr($title, 'Species') !== FALSE) {
      $variables['title'] = str_ireplace('Species', 'Manatee', $title);
    }
  }

  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node && ($node->bundle() === 'species_counting_results' || $node->bundle() === 'species_id_results')) {
    // Hide the page title.
    $variables['title'] = '';
  }
}

/**
 * Implements hook_preprocess_HOOK() for panel templates.
 */
function fws_raf_preprocess_bootstrap_panel(&$variables) {
  // Only replace 'Species' with 'Manatee' for 'Manatee' site.
  if (\Drupal::service('settings')->get('replace_species_with_manatee') === TRUE) {
    $variables['heading'] = str_ireplace('Species', 'Manatee', $variables['heading']);
  }
}

/**
 * Implements hook_theme_suggestions_block_alter().
 */
function fws_raf_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (isset($variables['elements']['content']['#view'])) {
    $view = $variables['elements']['content']['#view'];
    $view_id = $view->id();

    // Check if the view ID starts with 'tracking'.
    if (strpos($view_id, 'tracking') === 0) {
      $suggestions[] = 'block__views_block__tracking';
    }
  }
}

/**
 * Implements hook_preprocess_page().
 */
function fws_raf_preprocess_page(&$variables) {
  // Get the header_links_auth configuration value from settings.
  $variables['header_links_auth'] = \Drupal::config('system.site')->get('header_links_auth') ?? FALSE;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for user.
 */
function fws_raf_theme_suggestions_user_alter(array &$suggestions, array $variables) {
  // Check if the falcon_user_profile_override setting is enabled.
  $falcon_user_profile_override = \Drupal::service('settings')->get('falcon_user_profile_override', FALSE);

  // Add our custom template suggestion if the setting is enabled.
  if ($falcon_user_profile_override) {
    $suggestions[] = 'user__falcon';
  }
}
